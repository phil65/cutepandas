name: Python package

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04, macos-10.15, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.platform }}
    env:
      DISPLAY: ":99.0"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install uv
        uses: yezz123/setup-uv@v4

      - name: Install Qt libraries
        uses: tlambert03/setup-qt-libs@v1

      - name: Install Linux OpenGl packages
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libopengl0 libegl1-mesa libxcb-xinput0

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install -E pyside6

      - name: Test with pytest
        uses: GabrielBB/xvfb-action@v1
        timeout-minutes: 5
        with:
          run: |
            poetry run pytest --doctest-modules --junitxml=junit/test-results.xml --cov=cutepandas --cov-report=xml --cov-report=html

      - name: Create documentation
        if: matrix.python-version == '3.12' && runner.os == 'Linux'
        run: |
          poetry run mkdocs build

      - name: Build and publish
        if: startsWith(github.ref, 'refs/tags/v') && matrix.python-version == '3.12' && runner.os == 'Linux'
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_SECRET }}
          poetry publish --build

      - name: Deploy docs
        if: startsWith(github.ref, 'refs/tags/v') && matrix.python-version == '3.12' && runner.os == 'Linux'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install uv
        uses: yezz123/setup-uv@v4

      - name: Install packages
        # if: runner.os == 'Linux'
        run: |
          pip install poetry
          poetry install -E pyside6
          poetry run mkdocs build

      - name: Build and publish
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_SECRET }}
          poetry publish --build

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
